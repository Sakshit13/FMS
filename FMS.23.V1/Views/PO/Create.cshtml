@model FMS._23.V1.ViewModels.PurchaseOrderViewModel

@{
	ViewData["Title"] = "Create";
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<h4>Purchase Order</h4>
<hr />
<div class="container">
	<div class="row">
		@*<div class="col-md-4">*@
		<form id="myForm" asp-action="Create" asp-controller="PO" method="post">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="row">
				<div class="form-group col-md-4">
					<label asp-for="PurchaseOrderNumber" class="control-label"></label>
					<input asp-for="PurchaseOrderNumber" value="@ViewBag.PurchaseOrderNumbers" readonly="readonly" class="form-control" />
					<span asp-validation-for="PurchaseOrderNumber" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="OrderDate" class="control-label OrderDate"></label>
					<input asp-for="OrderDate" class="form-control" />
					<span asp-validation-for="OrderDate" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="VendorGstnumber" class="control-label"></label>
					<input asp-for="VendorGstnumber" class="form-control" />
					<span asp-validation-for="VendorGstnumber" class="text-danger"></span>
				</div>
			</div>

			<div class="row">
				<div class="form-group col-md-4">
					<label asp-for="PartNumber" class="control-label"></label>
					<select asp-for="PartNumber" class="form-control PartNumberDropdown" asp-items="@(ViewBag.PartNumber)">
						<option value="">--Select PartNumber--</option>
					</select>
					<span asp-validation-for="PartNumber" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="OrderQty" class="control-label"></label>
					<input asp-for="OrderQty" class="form-control" />
					<span asp-validation-for="OrderQty" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="UnitPrice" class="control-label"></label>
					<input asp-for="UnitPrice" class="form-control Rate" />
					<span asp-validation-for="UnitPrice" class="text-danger"></span>
				</div>
			</div>

			<div class="row">
				<div class="form-group col-md-4">
					<label asp-for="Tax" class="control-label"></label>
					<input asp-for="Tax" class="form-control" />
					<span asp-validation-for="Tax" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="Discount" class="control-label"></label>
					<input asp-for="Discount" class="form-control" />
					<span asp-validation-for="Discount" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="Cgst" class="control-label"></label>
					<input asp-for="Cgst" class="form-control Cgst" />
					<span asp-validation-for="Cgst" class="text-danger"></span>
				</div>
			</div>
			<div class="row">
				<div class="form-group col-md-4">
					<label asp-for="Sgst" class="control-label"></label>
					<input asp-for="Sgst" class="form-control Sgst" />
					<span asp-validation-for="Sgst" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="Igst" class="control-label"></label>
					<input asp-for="Igst" class="form-control Igst" />
					<span asp-validation-for="Igst" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="Tcs" class="control-label"></label>
					<input asp-for="Tcs" class="form-control" />
					<span asp-validation-for="Tcs" class="text-danger"></span>
				</div>
			</div>

			<div class="row">
				<div class="form-group col-md-4">
					<label asp-for="Cartage" class="control-label"></label>
					<input asp-for="Cartage" class="form-control" />
					<span asp-validation-for="Cartage" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="FreightAmount" class="control-label"></label>
					<input asp-for="FreightAmount" class="form-control" />
					<span asp-validation-for="FreightAmount" class="text-danger"></span>
				</div>
				<div class="form-group col-md-4">
					<label asp-for="CurrentStock" class="control-label"></label>
					<input asp-for="CurrentStock" class="form-control StockQuantity" />
					<span asp-validation-for="CurrentStock" class="text-danger"></span>
				</div>
			</div>

			<div class="row">
				<div class="form-group col-md-4">
					<label asp-for="Remarks" class="control-label"></label>
					<input asp-for="Remarks" class="form-control" />
					<span asp-validation-for="Remarks" class="text-danger"></span>
				</div>
			</div>

		</form>
		@* </div>*@
	</div>

</div>
<div class="col-md-12">
	
	<table id="itemTable" class="table">
		<thead>
			<tr>
				<th>Part Number</th>
				<th>Order Qty</th>
				<th>Unit Price</th>
				<th>Tax</th>
				<th>Discount</th>
				<th>Cgst</th>
				<th>Sgst</th>
				<th>Igst</th>
				<th>Tcs</th>
				<th>Cartage</th>
				<th>Freight Amount</th>
				<th>Current Stock</th>
				<th>Remarks</th>
				<th>Action</th>
			</tr>
		</thead>
		<tbody>
		</tbody>

	</table>
	<div>
		<button id="addItemButton" class="btn btn-success float-right">Add New Item</button>
	</div>
	<div class="form-group">
		<input id="btnSubmit" type="submit" value="Create" class="btn btn-primary" />
	</div>
</div>
<script>
	$(document).ready(function () {
		debugger;
		$(".PartNumberDropdown").change(function () {
			var selectedPartNumber = $(this).val();
			var depotId = 1; // Set your desired depot ID here

			if (selectedPartNumber !== "") {
				$.ajax({
					url: "/PO/GetCurrentStock", // Replace with the URL to your controller action
					type: "POST",
					data: {
						partNumber: selectedPartNumber,
						depotId: depotId
					},
					success: function (data) {
						console.log(data);
						if (data != null) {

							// Populate the form fields with the returned StockInfo data
							//$('#Igst').val(data.igst);
							//$('#Sgst').val(data.sgst);
							//$('#StockQuantity').val(data.stockQuantity);
							//$('#Rate').val(data.rate);
							//$('#Cgst').val(data.cgst);

							$(".Igst").val(data.igst);
							$(".Sgst").val(data.sgst);
							$(".StockQuantity").val(data.stockQuantity);
							$(".Rate").val(data.rate);
							$(".Cgst").val(data.cgst);
						} else {
							alert("No data found.");
						}
					},
					error: function () {
						// Handle errors if necessary
					}
				});
			}
		});
	});

	var editingRow = null; // Global variable to keep track of the edited row

	// Function to add or update a row
	function addOrUpdateRow() {
		var partNumber = document.querySelector("#PartNumber").value;
		var orderQty = document.querySelector("#OrderQty").value;
		var unitPrice = document.querySelector("#UnitPrice").value;
		var tax = document.querySelector("#Tax").value;
		var discount = document.querySelector("#Discount").value;
		var cgst = document.querySelector("#Cgst").value;
		var sgst = document.querySelector("#Sgst").value;
		var igst = document.querySelector("#Igst").value;
		var tcsper = document.querySelector("#Tcs").value;
		var cartage = document.querySelector("#Cartage").value;
		var freightAmount = document.querySelector("#FreightAmount").value;
		var currentStock = document.querySelector("#CurrentStock").value;
		var remarks = document.querySelector("#Remarks").value;

		if (editingRow) {
			// Update the row if an edit operation is in progress
			editingRow.cells[0].textContent = partNumber;
			editingRow.cells[1].textContent = orderQty;
			editingRow.cells[2].textContent = unitPrice;
			editingRow.cells[3].textContent = tax;
			editingRow.cells[4].textContent = discount;
			editingRow.cells[5].textContent = cgst;
			editingRow.cells[6].textContent = sgst;
			editingRow.cells[7].textContent = igst;
			editingRow.cells[8].textContent = tcsper;
			editingRow.cells[9].textContent = cartage;
			editingRow.cells[10].textContent = freightAmount;
			editingRow.cells[11].textContent = currentStock;
			editingRow.cells[12].textContent = remarks;
			editingRow = null; // Reset editingRow after the update
		} else {
			// Create a new row if no edit operation is in progress
			var newRow = document.createElement("tr");

			newRow.innerHTML = `
						<td class="partNumber">${partNumber}</td>
						<td class="orderQty">${orderQty}</td>
						<td class="unitPrice">${unitPrice}</td>
						<td class="tax">${tax}</td>
						<td class="discount">${discount}</td>
						<td class="cgst">${cgst}</td>
						<td class="sgst">${sgst}</td>
						<td class="igst">${igst}</td>
						<td class="tcsper">${tcsper}</td>
						<td class="cartage">${cartage}</td>
						<td class="freightAmount">${freightAmount}</td>
						<td class="currentStock">${currentStock}</td>
						<td class="remarks">${remarks}</td>
						<td>
							<a class="edit-link" href="#">Edit</a> |
							<a class="delete-link" href="#">Delete</a>
						</td>
					`;

			document.querySelector("#itemTable tbody").appendChild(newRow);
		}

		// Clear input fields after adding or updating
		clearFormFields();
	}

	// Function to clear input fields
	function clearFormFields() {
		document.querySelector("#PartNumber").value = "";
		document.querySelector("#OrderQty").value = "";
		document.querySelector("#UnitPrice").value = "";
		document.querySelector("#Tax").value = "";
		document.querySelector("#Discount").value = "";
		document.querySelector("#Cgst").value = "";
		document.querySelector("#Sgst").value = "";
		document.querySelector("#Igst").value = "";
		document.querySelector("#Tcs").value = "";
		document.querySelector("#Cartage").value = "";
		document.querySelector("#FreightAmount").value = "";
		document.querySelector("#CurrentStock").value = "";
		document.querySelector("#Remarks").value = "";
	}

	// Add event listener to the "Add New Item" button
	document.getElementById("addItemButton").addEventListener("click", function () {
		addOrUpdateRow();
	});

	// Add event listener to the "Edit" links in the table
	document.querySelector("#itemTable tbody").addEventListener("click", function (e) {
		if (e.target && e.target.classList.contains("edit-link")) {
			e.preventDefault();
			editingRow = e.target.closest("tr"); // Set the currently edited row
			populateFormFields(editingRow);
		}
	});

	// Add event listener to the "Delete" links in the table
	document.querySelector("#itemTable tbody").addEventListener("click", function (e) {
		if (e.target && e.target.classList.contains("delete-link")) {
			e.preventDefault();
			var rowToDelete = e.target.closest("tr");
			if (confirm("Are you sure you want to delete this item?")) {
				rowToDelete.remove();
			}
		}
	});

	// Function to populate form fields with row data for editing
	function populateFormFields(row) {
		document.querySelector("#PartNumber").value = row.querySelector(".partNumber").textContent;
		document.querySelector("#OrderQty").value = row.querySelector(".orderQty").textContent;
		document.querySelector("#UnitPrice").value = row.querySelector(".unitPrice").textContent;
		document.querySelector("#Tax").value = row.querySelector(".tax").textContent;
		document.querySelector("#Discount").value = row.querySelector(".discount").textContent;
		document.querySelector("#Cgst").value = row.querySelector(".cgst").textContent;
		document.querySelector("#Sgst").value = row.querySelector(".sgst").textContent;
		document.querySelector("#Igst").value = row.querySelector(".igst").textContent;
		document.querySelector("#Tcs").value = row.querySelector(".tcsper").textContent;
		document.querySelector("#Cartage").value = row.querySelector(".cartage").textContent;
		document.querySelector("#FreightAmount").value = row.querySelector(".freightAmount").textContent;
		document.querySelector("#CurrentStock").value = row.querySelector(".currentStock").textContent;
		document.querySelector("#Remarks").value = row.querySelector(".remarks").textContent;
	}

	function getAllEmpData() {
		var data = [];
		$('#itemTable tbody tr').each(function () {
			var PartNumber = $(this).find('.partNumber').text();
			var OrderQty = $(this).find('.orderQty').text();
			var UnitPrice = $(this).find('.unitPrice').text();
			var Tax = $(this).find('.tax').text();
			var Discount = $(this).find('.discount').text();
			var Cgst = $(this).find('.cgst').text();
			var Sgst = $(this).find('.sgst').text();
			var Igst = $(this).find('.igst').text();
			var Tcs = $(this).find('.tcsper').text();
			var Cartage = $(this).find('.cartage').text();
			var FreightAmount = $(this).find('.freightAmount').text();
			var CurrentStock = $(this).find('.currentStock').text();
			var Remarks = $(this).find('.remarks').text();

			var alldata = {
				'PartNumber': PartNumber,
				'OrderQty': OrderQty,
				'UnitPrice': UnitPrice,
				'Tax': Tax,
				'Discount': Discount,
				'Cgst': Cgst,
				'Sgst': Sgst,
				'Igst': Igst,
				'Tcs': Tcs,
				'Cartage': Cartage,
				'FreightAmount': FreightAmount,
				'CurrentStock': CurrentStock,
				'Remarks': Remarks
			};

			data.push(alldata);
		});
		console.log(data);
		return data;
	}

	// Add event listener to the "Submit" button
	document.getElementById("btnSubmit").addEventListener("click", function () {
		debugger;
		var itemData = getAllEmpData();
		var jsonData = JSON.stringify(itemData);
		var PurchaseOrderNumber = $('#PurchaseOrderNumber').val();
		var OrderDate = $('#OrderDate').val();
		var VendorGstnumber = $('#VendorGstnumber').val();
		debugger;
		$.ajax({
			url: '/PO/Create', // Replace 'ControllerName' with your controller name
			type: 'POST',

			data: { podata: jsonData, PurchaseOrderNumber: PurchaseOrderNumber, OrderDate: OrderDate, VendorGstnumber: VendorGstnumber },
			success: function (response) {
				if (response.success) {
					alert(response.message);
					// Optionally, you can redirect to another page or perform other actions upon success
				} else {
					alert("Error: " + response.message);
				}
			},
			error: function () {
				alert("Error while sending data to the server");
			}
		});
	});
</script>

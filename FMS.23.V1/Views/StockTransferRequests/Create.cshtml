@model FMS._23.V1.Models.StockTransferPartRequest

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<h4>StockTransferPartRequest</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form id="create-form" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label asp-for="RequisitionCode" class="control-label"></label>
                        <input asp-for="RequisitionCode" class="form-control" />
                        <span asp-validation-for="RequisitionCode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label asp-for="PartNumber" class="control-label"></label>
                        <select asp-for="PartNumber" class="form-control PartNumberDropdown" asp-items="@(ViewBag.PartNumber)">
                            <option value="">--Select PartNumber--</option>
                        </select>
                        <span asp-validation-for="PartNumber" class="text-danger"></span>
                    </div>

                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label class="control-label"> To Depot Stock</label>
                        <input id="ToDepotStock" readonly="readonly" class="form-control" />
                    </div>
                </div>
               
            </div>
            <div class="row">
                
                <div class="col-lg-4">
                    <div class="form-group">
                        <label asp-for="RequestQty" class="control-label"></label>
                        <input asp-for="RequestQty" class="form-control" />
                        <span asp-validation-for="RequestQty" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label asp-for="RequestedByDepot" class="control-label"></label>
                        <input asp-for="RequestedByDepot" class="form-control" />
                        <span asp-validation-for="RequestedByDepot" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label asp-for="RequestedToDepot" class="control-label"></label>
                        <select asp-for="RequestedToDepot" class="form-control" asp-items="ViewBag.RequestedToDepot"></select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label asp-for="RequestedDate" class="control-label"></label>
                        <input asp-for="RequestedDate" class="form-control" />
                        <span asp-validation-for="RequestedDate" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <input type="button" value="Add New Item" class="btn btn-primary" id="add-new-item" />
                        <button class="btn btn-primary" id="btnSubmit">Save</button>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label asp-for="Remarks" class="control-label"></label>
                        <input asp-for="Remarks" class="form-control" />
                        <span asp-validation-for="Remarks" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<hr />
<table class="table">
    <thead>
        <tr>
            <th>Part Number</th>
            <th>Request Qty</th>
            <th>Remarks</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="data-table-body">
        <!-- Data will be displayed here -->
    </tbody>
</table>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- Make sure jQuery is included -->
<script>
    $(document).ready(function () {
        $(".PartNumberDropdown").change(function () {
            var selectedPartNumber = $(this).val();
            var depotId = 1; // Set your desired depot ID here

            if (selectedPartNumber !== "") {
                $.ajax({
                    url: "/StockTransferRequests/GetCurrentStock", // Replace with the URL to your controller action
                    type: "POST",
                    data: {
                        partNumber: selectedPartNumber,
                        depotId: depotId
                    },
                    success: function (data) {
                        $("#ToDepotStock").val(data);
                    },
                    error: function () {
                        // Handle errors if necessary
                    }
                });
            }
        });

        var editingRow = null; // Global variable to keep track of the edited row

        // Function to add or update a row
        function addOrUpdateRow() {
            var partNumber = document.querySelector("#PartNumber").value;
            var requestQty = document.querySelector("#RequestQty").value;
            var remarks = document.querySelector("#Remarks").value;
            var existingRow = findRowByPartNumber(partNumber);

            if (existingRow) {
                // Update the existing row
                existingRow.cells[0].textContent = partNumber;
                existingRow.cells[1].textContent = requestQty;
                existingRow.cells[2].textContent = remarks;
            } else {
                // Create a new row if no existing row is found
                var newRow = document.createElement("tr");

                newRow.innerHTML = `
                        <td>${partNumber}</td>
                        <td>${requestQty}</td>
                        <td>${remarks}</td>
                        <td>
                            <a class="edit-link" href="#">Edit</a> |
                            <a class="delete-link" href="#">Delete</a>
                        </td>
                    `;

                document.querySelector("#data-table-body").appendChild(newRow);
            }

            // Clear input fields after adding or updating
            clearFormFields();
        }

        // Function to clear input fields
        function clearFormFields() {
            document.querySelector("#PartNumber").value = "";
            document.querySelector("#RequestQty").value = "";
            document.querySelector("#Remarks").value = "";
        }

        // Add event listener to the "Add New Item" button
        document.getElementById("add-new-item").addEventListener("click", function () {
            addOrUpdateRow();
        });

        // Add event listener to the "Edit" links in the table
        document.querySelector("#data-table-body").addEventListener("click", function (e) {
            if (e.target && e.target.classList.contains("edit-link")) {
                e.preventDefault();
                editingRow = e.target.closest("tr"); // Set the currently edited row
                populateFormFields(editingRow);
            }
        });

        // Add event listener to the "Delete" links in the table
        document.querySelector("#data-table-body").addEventListener("click", function (e) {
            if (e.target && e.target.classList.contains("delete-link")) {
                e.preventDefault();
                var rowToDelete = e.target.closest("tr");
                if (confirm("Are you sure you want to delete this item?")) {
                    rowToDelete.remove();
                }
            }
        });

        // Function to populate form fields with row data for editing
        function populateFormFields(row) {
            document.querySelector("#PartNumber").value = row.cells[0].textContent;
            document.querySelector("#RequestQty").value = row.cells[1].textContent;
            document.querySelector("#Remarks").value = row.cells[2].textContent;
        }

        // Function to find a row by part number
        function findRowByPartNumber(partNumber) {
            var rows = document.querySelectorAll("#data-table-body tr");

            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                var cells = row.cells;
                if (cells[0].textContent === partNumber) {
                    return row;
                }
            }

            return null; // If no matching row is found
        }

        // Function to get data for all items in the table
        function getAllItemData() {
            var itemData = [];
            var rows = document.querySelectorAll("#data-table-body tr");

            rows.forEach(function (row) {
                var cells = row.cells;
                var partNumber = cells[0].textContent;
                var requestQty = cells[1].textContent;
                var remarks = cells[2].textContent;

                itemData.push({
                    PartNumber: partNumber,
                    RequestQty: requestQty,
                    Remarks: remarks
                });
            });

            return itemData;
        }

        // Add event listener to the form submit button
        document.getElementById("btnSubmit").addEventListener("click", function () {
            var RequisitionCode = $('#RequisitionCode').val();
            var RequestedDate = $('#RequestedDate').val();
            var RequestedToDepot = $('#RequestedToDepot').val();
            var itemData = getAllItemData();

            var jsonData = JSON.stringify(itemData);

            $.ajax({
                url: '/StockTransferRequests/Create',
                type: 'POST',
                data: {
                    jsonData: jsonData,
                    RequisitionCode: RequisitionCode,
                    RequestedDate: RequestedDate,
                    RequestedToDepot: RequestedToDepot
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function () {
                    alert("Error while sending data to the server");
                }
            });
        });
    });
</script>


<div>
    <a asp-action="Index" class="btn-outline-danger">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
